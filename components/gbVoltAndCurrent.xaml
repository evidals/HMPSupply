<UserControl x:Class="HMPSupply.components.gbVoltAndCurrent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HMPSupply.components"
             mc:Ignorable="d"
             x:Name="root" d:DesignWidth="169.498" Height="199">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius ="7" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <GroupBox x:Name="gbVI_CHx" Header="{Binding MainName, ElementName=root}" Margin="0,0,0,0" Width="170" Height="210" HorizontalAlignment="Left"  VerticalContentAlignment="Top" MaxHeight="198" UseLayoutRounding="True" VerticalAlignment="Top">
            <StackPanel Height="178">
                <StackPanel Height="22" Orientation="Vertical">
                    <StackPanel Height="22" Orientation="Horizontal">
                        <CheckBox x:Name="cbCHXX" Content="{Binding MainName, ElementName=root}" RenderTransformOrigin="0.518,1.043" Width="55" VerticalContentAlignment="Top" UseLayoutRounding="False" HorizontalAlignment="Left" Margin="7,4,0,0" VerticalAlignment="Top" Click="cbCH01_Click"/>
                        <Button x:Name="buCHXX_Read_Volt_Curr" Content="Read" RenderTransformOrigin="0.437,0.512" Margin="26,0,0,0" Width="55" Click="buCHXX_Read_Volt_Curr_Click"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Height="130" Orientation="Horizontal">
                    <GroupBox x:Name="gbCHXX_U" Header="Voltage" Margin="3,0,0,0" Height="129" HorizontalAlignment="Left" Width="76">
                        <StackPanel Height="99">
                            <RadioButton x:Name="rBuCHXX_10V" Content="   1 V"  HorizontalAlignment="Left" Width="47" Checked="rBuCHXX_10V_Checked"/>
                            <RadioButton x:Name="rBuCHXX_33V" Content="3.3 V"   HorizontalAlignment="Left" Width="47" Checked="rBuCHXX_33V_Checked"/>
                            <RadioButton x:Name="rBuCHXX_50V" Content="   5 V"  HorizontalAlignment="Left" Width="47" Checked="rBuCHXX_50V_Checked"/>
                            <RadioButton x:Name="rBuCHXX_80V" Content="   8 V"  HorizontalAlignment="Left" Width="47" Checked="rBuCHXX_80V_Checked"/>
                            <RadioButton x:Name="rBuCHXX_12V" Content=" 12 V"   HorizontalAlignment="Left" Width="47" Checked="rBuCHXX_12V_Checked"/>
                            <RadioButton x:Name="rBuCHXX_InputVol" Content="" HorizontalAlignment="Left" Checked="rBuCHXX_InputVol_Checked"/>
                            <TextBox x:Name="CHXX_InVol" HorizontalAlignment="Left" Margin="17,-15,0,0" TextWrapping="Wrap" Text="14" Width="36" Height="18" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom"/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox x:Name="gbCHXX_I" Header="I_max" Margin="0,0,0,0" Height="129" HorizontalAlignment="Left" Width="76">
                        <StackPanel Height="99">
                            <RadioButton x:Name="rBuCHXX_1A" Content=" 1 A"  HorizontalAlignment="Left" Checked="rBuCHXX_1A_Checked"/>
                            <RadioButton x:Name="rBuCHXX_2A" Content=" 2 A"  HorizontalAlignment="Left" Checked="rBuCHXX_2A_Checked"/>
                            <RadioButton x:Name="rBuCHXX_3A" Content=" 3 A"  HorizontalAlignment="Left" Checked="rBuCHXX_3A_Checked"/>
                            <RadioButton x:Name="rBuCHXX_4A" Content=" 4 A"  HorizontalAlignment="Left" Checked="rBuCHXX_4A_Checked"/>
                            <RadioButton x:Name="rBuCHXX_8A" Content=" 8 A"  HorizontalAlignment="Left" Checked="rBuCHXX_8A_Checked"/>
                            <RadioButton x:Name="rBuCHXX_InputCurr" Content="" HorizontalAlignment="Left"/>
                            <TextBox x:Name="CHXX_InCurr" HorizontalAlignment="Left" Margin="17,-15,0,0" TextWrapping="Wrap" Text="9" Width="36" Height="18" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom"/>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
                <StackPanel Height="20" Orientation="Horizontal">
                    <Button Style="{DynamicResource RoundedButtonStyle}" x:Name="buActivateChannel" Content="{Binding MainName, ElementName=root}" Margin="4,0,0,0" Width="44" Height="20" Click="buActivateChannel_Click" IsEnabled="False"/>
                    <Button Style="{DynamicResource RoundedButtonStyle}" x:Name="buOutThisChannel" Content="OUT" Margin="4,0,0,0" Width="44" Height="20" Click="buOutThisChannel_Click" IsEnabled="False"/>
                    <Button x:Name="buCHXX_Set_Volt_Curr" Content="Set" RenderTransformOrigin="-0.197,0.507" HorizontalAlignment="Left" Margin="8,0,0,0" Width="49" Click="buCHXX_Set_Volt_Curr_Click"/>
                </StackPanel>
            </StackPanel>
        </GroupBox>
    </Grid>

</UserControl>
